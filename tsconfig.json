/**
 * documentation: https://www.typescriptlang.org/tsconfig
 * json schema:   http://json.schemastore.org/tsconfig
 * boilerplate:   https://github.com/onuar/ts-boilerplate/blob/master/tsconfig.json
 */
{
  "compilerOptions": {
    /* Basic Options */
    "target": "esnext",                       /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'. */
    "module": "esnext",                       /* Specify module code generation: 'none', commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "downlevelIteration": true,
    "lib": [
      "esnext",
      "dom",
      "dom.iterable"
    ],                                        /* Specify library files to be included in the compilation:  */
    // "allowJs": true,                       /* Allow javascript files to be compiled. */
    // "checkJs": true,                       /* Report errors in .js files. */
    "jsx": "preserve",                        /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "declaration": false,                     /* Generates corresponding '.d.ts' file. */
    // "declarationDir": "./src/types",
    "sourceMap": true,
    // "outDir": "./dist",

    /* Strict Type-Checking Options */
    "strict": true,                           /* Enable all strict type-checking options. */
    "noImplicitAny": false,                   /* Raise error on expressions and declarations with an implied 'any' type. */
    "noImplicitThis": false,                  /* Raise error on 'this' expressions with an implied 'any' type. */

    /* Module Resolution Options */
    "moduleResolution": "node",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    "baseUrl": "./",                          /* Base directory to resolve non-absolute module names. */
    "paths": {
      // "@/*": [
      //   "src/*"
      // ]
    },                                        /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
    // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
    // "typeRoots": [],                       /* List of folders to include type definitions from. */
    "types": [
      // "webpack-env"
    ],                                        /* Type declaration files to be included in compilation. */
    "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                  /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

    /* Experimental Options */
    "experimentalDecorators": true,           /* Enables experimental support for ES7 decorators. */
  },

  "include": [
    "src/**/*",
  ],

  "exclude": [
    "tests",
    "node_modules"
  ]
}